<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2806" started-at="2017-02-26T00:39:23Z" finished-at="2017-02-26T00:39:26Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2806" started-at="2017-02-26T00:39:23Z" finished-at="2017-02-26T00:39:26Z">
      <class name="core.XSDValidationTest">
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="7" started-at="2017-02-25T16:39:23Z" finished-at="2017-02-25T16:39:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@30c15d8b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="1508" started-at="2017-02-25T16:39:23Z" data-provider="dp" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.01 (XSD Validation Type # 1)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t1.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="1" started-at="2017-02-25T16:39:25Z" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5e0e82ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="409" started-at="2017-02-25T16:39:25Z" data-provider="dp" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.02 (XSD Validation Type # 2)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t2.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="0" started-at="2017-02-25T16:39:25Z" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6771beb3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="213" started-at="2017-02-25T16:39:25Z" data-provider="dp" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.03 (XSD Validation Type # 3)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t3.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="FAIL" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="217" started-at="2017-02-25T16:39:25Z" data-provider="dp" finished-at="2017-02-25T16:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.04 (XSD Validation Type # 1)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t1.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat_e1.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: <true>
     but: was <false>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at core.XSDValidationTest.test(XSDValidationTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="0" started-at="2017-02-25T16:39:25Z" finished-at="2017-02-25T16:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@51399530]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="1" started-at="2017-02-25T16:39:26Z" finished-at="2017-02-25T16:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6b2ea799]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="FAIL" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="212" started-at="2017-02-25T16:39:26Z" data-provider="dp" finished-at="2017-02-25T16:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.05 (XSD Validation Type # 2)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t2.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat_e2.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: <true>
     but: was <false>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at core.XSDValidationTest.test(XSDValidationTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="bm(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="bm" is-config="true" duration-ms="1" started-at="2017-02-25T16:39:26Z" finished-at="2017-02-25T16:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.XSDValidationTest.test(java.lang.String,java.lang.String,java.lang.String) throws java.net.MalformedURLException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@411f53a0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="FAIL" signature="test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:core.XSDValidationTest@cb5822]" test-instance-name="BAT-01.06 (XSD Validation Type # 3)" name="test" duration-ms="186" started-at="2017-02-25T16:39:26Z" data-provider="dp" finished-at="2017-02-25T16:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAT-01.06 (XSD Validation Type # 3)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[src/resources/test_data/xsd/bat/bat_t3.xsd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://alex.academy/xml/bat_e3.xml]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: <true>
     but: was <false>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at core.XSDValidationTest.test(XSDValidationTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- core.XSDValidationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
